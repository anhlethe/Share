<?php class Life_model extends MY_Model{    private $module = 'life';    private $table = 'life';    private $site_lang = 'en';    function __construct()    {        parent::__construct();        $this->site_lang = $this->session->userdata('site_lang');    }    function getsearchContent($limit, $page)    {        $this->db->select('*');        $this->db->limit($limit, $page);        $this->db->order_by('created_date', 'desc');        if ($this->input->post('content') != '' && $this->input->post('content') != 'type here...') {            $this->db->where('(`title` LIKE "%' . $this->input->post('content') . '%" OR `content` LIKE "%' . $this->input->post('content') . '%" OR `alias` LIKE "%' . $this->input->post('content') . '%")');        }        if ($this->input->post('dateFrom') != '' && $this->input->post('dateTo') == '') {            $this->db->where('created_date >= "' . date('Y-m-d 00:00:00', strtotime($this->input->post('dateFrom'))) . '"');        }        if ($this->input->post('dateFrom') == '' && $this->input->post('dateTo') != '') {            $this->db->where('created_date <= "' . date('Y-m-d 23:59:59', strtotime($this->input->post('dateTo'))) . '"');        }        if ($this->input->post('dateFrom') != '' && $this->input->post('dateTo') != '') {            $this->db->where('created_date >= "' . date('Y-m-d 00:00:00', strtotime($this->input->post('dateFrom'))) . '"');            $this->db->where('created_date <= "' . date('Y-m-d 23:59:59', strtotime($this->input->post('dateTo'))) . '"');        }        $query = $this->db->get(PREFIX . $this->table);        if ($query->result()) {            return $query->result();        } else {            return false;        }    }    function getTotalsearchContent()    {        $this->db->select('*');        if ($this->input->post('content') != '' && $this->input->post('content') != 'type here...') {            $this->db->where('(`title` LIKE "%' . $this->input->post('content') . '%" OR `content` LIKE "%' . $this->input->post('content') . '%")');        }        if ($this->input->post('dateFrom') != '' && $this->input->post('dateTo') == '') {            $this->db->where('created_date >= "' . date('Y-m-d 00:00:00', strtotime($this->input->post('dateFrom'))) . '"');        }        if ($this->input->post('dateFrom') == '' && $this->input->post('dateTo') != '') {            $this->db->where('created_date <= "' . date('Y-m-d 23:59:59', strtotime($this->input->post('dateTo'))) . '"');        }        if ($this->input->post('dateFrom') != '' && $this->input->post('dateTo') != '') {            $this->db->where('created_date >= "' . date('Y-m-d 00:00:00', strtotime($this->input->post('dateFrom'))) . '"');            $this->db->where('created_date <= "' . date('Y-m-d 23:59:59', strtotime($this->input->post('dateTo'))) . '"');        }        $query = $this->db->count_all_results(PREFIX . $this->table);        if ($query > 0) {            return $query;        } else {            return false;        }    }    function getsearchContentKey($key, $limit, $page)    {        $this->db->select('*');        $this->db->limit($limit, $page);        $this->db->order_by('created_date', 'desc');        if ($key != '' && $key != 'type here...') {            $this->db->where('(`title` LIKE "%' . $key . '%" OR `content` LIKE "%' . $key . '%" OR `alias` LIKE "%' . $key . '%")');        }        if ($this->input->post('dateFrom') != '' && $this->input->post('dateTo') == '') {            $this->db->where('created_date >= "' . date('Y-m-d 00:00:00', strtotime($this->input->post('dateFrom'))) . '"');        }        if ($this->input->post('dateFrom') == '' && $this->input->post('dateTo') != '') {            $this->db->where('created_date <= "' . date('Y-m-d 23:59:59', strtotime($this->input->post('dateTo'))) . '"');        }        if ($this->input->post('dateFrom') != '' && $this->input->post('dateTo') != '') {            $this->db->where('created_date >= "' . date('Y-m-d 00:00:00', strtotime($this->input->post('dateFrom'))) . '"');            $this->db->where('created_date <= "' . date('Y-m-d 23:59:59', strtotime($this->input->post('dateTo'))) . '"');        }        $query = $this->db->get(PREFIX . $this->table);        if ($query->result()) {            return $query->result();        } else {            return false;        }    }    function getTotalsearchContentKey($key)    {        $this->db->select('*');        if ($key != '' && $key != 'type here...') {            $this->db->where('(`title` LIKE "%' . $key . '%" OR `content` LIKE "%' . $key . '%")');        }        if ($this->input->post('dateFrom') != '' && $this->input->post('dateTo') == '') {            $this->db->where('created_date >= "' . date('Y-m-d 00:00:00', strtotime($this->input->post('dateFrom'))) . '"');        }        if ($this->input->post('dateFrom') == '' && $this->input->post('dateTo') != '') {            $this->db->where('created_date <= "' . date('Y-m-d 23:59:59', strtotime($this->input->post('dateTo'))) . '"');        }        if ($this->input->post('dateFrom') != '' && $this->input->post('dateTo') != '') {            $this->db->where('created_date >= "' . date('Y-m-d 00:00:00', strtotime($this->input->post('dateFrom'))) . '"');            $this->db->where('created_date <= "' . date('Y-m-d 23:59:59', strtotime($this->input->post('dateTo'))) . '"');        }        $query = $this->db->count_all_results(PREFIX . $this->table);        if ($query > 0) {            return $query;        } else {            return false;        }    }    function getlistcategory($catid)    {        $this->db->select('*');        $this->db->where('parent_id',$catid);        $query = $this->db->get(PREFIX .'category');        if ($query->result()) {            return $query->result();        } else {            return false;        }    }    function getTotalsearchContentofcategory($catid)    {        $this->db->select('*');        // var_dump($catid);exit();        if ($this->input->get('q') != '') {            $this->db->where("catid in (select id from category where parent_id='$catid' or id ='$catid') and active=1 and (`title` RegExp '" . $this->input->get('q') . "' OR `content` RegExp '" . $this->input->get('q') . "')");        }       // $this->db->where('catid', $catid);        $query = $this->db->get(PREFIX . $this->table);        if ($query->result()) {            return $query->result();        } else {            return false;        }        /*        $query = $this->db->count_all_results(PREFIX . $this->table);      //  var_dump($query);exit();        if ($query > 0) {            return $query;        } else {            return false;        }*/    }    function getTotalsearchContentCatrep($catid)    {        $this->db->select('*');      // var_dump($catid);exit();        if ($this->input->get('q') != '') {            //select * from life where catid in (select id from category where parent_id=31) and active=1 and (`title` RegExp '2011' OR `content` RegExp '2011')            $this->db->where("(`title` RegExp '" . $this->input->get('q') . "' OR `content` RegExp '" . $this->input->get('q') . "')");        }        $this->db->where('catid', $catid);        $query = $this->db->get(PREFIX . $this->table);        if ($query->result()) {            return $query->result();        } else {            return false;        }        /*        $query = $this->db->count_all_results(PREFIX . $this->table);      //  var_dump($query);exit();        if ($query > 0) {            return $query;        } else {            return false;        }*/    }    function getTotalsearchContentCat($catid)    {        $this->db->select('*');        if ($this->input->post('content') != '' && $this->input->post('content') != 'type here...') {            $this->db->where('(`title` LIKE "%' . $this->input->post('content') . '%" OR `content` LIKE "%' . $this->input->post('content') . '%")');        }        if ($this->input->post('dateFrom') != '' && $this->input->post('dateTo') == '') {            $this->db->where('created_date >= "' . date('Y-m-d 00:00:00', strtotime($this->input->post('dateFrom'))) . '"');        }        if ($this->input->post('dateFrom') == '' && $this->input->post('dateTo') != '') {            $this->db->where('created_date <= "' . date('Y-m-d 23:59:59', strtotime($this->input->post('dateTo'))) . '"');        }        if ($this->input->post('dateFrom') != '' && $this->input->post('dateTo') != '') {            $this->db->where('created_date >= "' . date('Y-m-d 00:00:00', strtotime($this->input->post('dateFrom'))) . '"');            $this->db->where('created_date <= "' . date('Y-m-d 23:59:59', strtotime($this->input->post('dateTo'))) . '"');        }        $this->db->where('catid', $catid);        $query = $this->db->count_all_results(PREFIX . $this->table);        if ($query > 0) {            return $query;        } else {            return false;        }    }    function getsearchContentCat($catid, $limit, $page)    {        $this->db->select('*');        $this->db->limit($limit, $page);        $this->db->order_by($this->input->post('func_order_by'), $this->input->post('order_by'));        if ($this->input->post('content') != '' && $this->input->post('content') != 'type here...') {            $this->db->where('(`title` LIKE "%' . $this->input->post('content') . '%" OR `content` LIKE "%' . $this->input->post('content') . '%" OR `alias` LIKE "%' . $this->input->post('content') . '%")');        }        if ($this->input->post('dateFrom') != '' && $this->input->post('dateTo') == '') {            $this->db->where('created_date >= "' . date('Y-m-d 00:00:00', strtotime($this->input->post('dateFrom'))) . '"');        }        if ($this->input->post('dateFrom') == '' && $this->input->post('dateTo') != '') {            $this->db->where('created_date <= "' . date('Y-m-d 23:59:59', strtotime($this->input->post('dateTo'))) . '"');        }        if ($this->input->post('dateFrom') != '' && $this->input->post('dateTo') != '') {            $this->db->where('created_date >= "' . date('Y-m-d 00:00:00', strtotime($this->input->post('dateFrom'))) . '"');            $this->db->where('created_date <= "' . date('Y-m-d 23:59:59', strtotime($this->input->post('dateTo'))) . '"');        }        $this->db->where('catid', $catid);        $query = $this->db->get(PREFIX . $this->table);        if ($query->result()) {            return $query->result();        } else {            return false;        }    }    function getDetailManagement($id)    {        $this->db->select('*');        $this->db->where('id', $id);        $query = $this->db->get(PREFIX . $this->table);        if ($query->result()) {            return $query->result();        } else {            return false;        }    }    function saveManagementByUser($fileName = '')    {        if ($this->input->post('activeAdmincp') == 'on') {            $active = 1;        } else {            $active = 0;        }        if ($this->input->post('hotAdmincp') == 'on') {            $hot = 1;        } else {            $hot = 0;        }        if ($this->input->post('homeAdmincp') == 'on') {            $home = 1;        } else {            $home = 0;        }        $publish = strtotime($this->input->post('publishdateAdmincp'));        if ($this->input->post('hiddenIdAdmincp') == 0) {            //Kiểm tra đã tồn tại chưa?            $checkData = $this->checkData($this->input->post('titleAdmincp'));            if ($checkData) {                print 'error-title-exists';                exit;            }            $checkSlug = $this->checkSlug($this->input->post('aliasAdmincp'));            if ($checkSlug) {                print 'error-alias-exists';                exit;            }            $data = array(                'title' => $this->input->post('titleAdmincp'),                'alias' => SEO($this->input->post('aliasAdmincp')),                'summary' => $this->input->post('descAdmincp'),                'content' => $this->input->post('contentAdmincp'),                'poster' => $this->session->userdata[0]->full_name,//$this->session->userdata('userInfo'),                'catid' => $this->input->post('catidAdmincp'),                'thumbnail' => $this->input->post('removeThumbnailAdmincp') == "on" ? "" : $fileName['thumbnail'],                'active' => $active,                'hot' => $hot,                'home' => $home,                'created_date' => date('Y-m-d H:i:s', time()),                'publish_date' => date('Y-m-d H:i:s', $publish)              //  'poster'=>$this->session->userdata[0]->fullname  ///them vao            );            if ($this->db->insert(PREFIX . $this->table, $data)) {                modules::run('admincp/saveLog', $this->module, $this->db->insert_id(), 'Add new', 'Add new');                return true;            }        } else {            $result = $this->getDetailManagement($this->input->post('hiddenIdAdmincp'));            //Kiểm tra đã tồn tại chưa?            if ($result[0]->title != $this->input->post('titleAdmincp')) {                $checkData = $this->checkData($this->input->post('titleAdmincp'));                if ($checkData) {                    print 'error-title-exists';                    exit;                }            }            if ($result[0]->alias != $this->input->post('aliasAdmincp')) {                $checkSlug = $this->checkSlug($this->input->post('aliasAdmincp'));                if ($checkSlug) {                    print 'error-alias-exists';                    exit;                }            }            //Xử lý xóa hình khi update thay đổi hình            if ($fileName['thumbnail'] == '') {                $fileName['thumbnail'] = $result[0]->thumbnail;            } else {                @unlink(BASEFOLDER . DIR_UPLOAD_LIFE . $result[0]->thumbnail);            }            //End xử lý xóa hình khi update thay đổi hình            $data = array(                'title' => $this->input->post('titleAdmincp'),                'alias' => SEO($this->input->post('aliasAdmincp')),                'summary' => $this->input->post('descAdmincp'),                'catid' => $this->input->post('catidAdmincp'),                'content' => $this->input->post('contentAdmincp', FALSE),                'thumbnail' => $this->input->post('removeThumbnailAdmincp') == "on" ? "" : $fileName['thumbnail'],                'hot' => $hot,                'home' => $home,                'active' => $active,                'publish_date' => date('Y-m-d H:i:s', $publish),                'poster' => $this->session->userdata[0]->full_name,               // 'poster'=>$this->session->userdata[0]->fullname            );            modules::run('admincp/saveLog', $this->module, $this->input->post('hiddenIdAdmincp'), '', 'Update', $result, $data);            $this->db->where('id', $this->input->post('hiddenIdAdmincp'));            if ($this->db->update(PREFIX . $this->table, $data)) {                return true;            }        }        return false;    }    function saveManagement($fileName = '')    {        if ($this->input->post('activeAdmincp') == 'on') {            $active = 1;        } else {            $active = 0;        }        if ($this->input->post('hotAdmincp') == 'on') {            $hot = 1;        } else {            $hot = 0;        }        if ($this->input->post('homeAdmincp') == 'on') {            $home = 1;        } else {            $home = 0;        }        $publish = strtotime($this->input->post('publishdateAdmincp'));        if ($this->input->post('hiddenIdAdmincp') == 0) {            //Kiểm tra đã tồn tại chưa?            $checkData = $this->checkData($this->input->post('titleAdmincp'));            if ($checkData) {                print 'error-title-exists';                exit;            }            $checkSlug = $this->checkSlug($this->input->post('aliasAdmincp'));            if ($checkSlug) {                print 'error-alias-exists';                exit;            }            $data = array(                'title' => $this->input->post('titleAdmincp'),                'alias' => SEO($this->input->post('aliasAdmincp')),                'summary' => $this->input->post('descAdmincp'),                'content' => $this->input->post('contentAdmincp'),                'poster' => $this->session->userdata('userInfo'),                'catid' => $this->input->post('catidAdmincp'),                'thumbnail' => $this->input->post('removeThumbnailAdmincp') == "on" ? "" : $fileName['thumbnail'],                'document' => $this->input->post('removeDocumentAdmincp') == "on" ? "" : $fileName['document'],                'active' => $active,                'hot' => $hot,                'home' => $home,                'created_date' => date('Y-m-d H:i:s', time()),                'publish_date' => date('Y-m-d H:i:s', $publish)            );            if ($this->db->insert(PREFIX . $this->table, $data)) {                modules::run('admincp/saveLog', $this->module, $this->db->insert_id(), 'Add new', 'Add new');                return true;            }        } else {            $result = $this->getDetailManagement($this->input->post('hiddenIdAdmincp'));            //Kiểm tra đã tồn tại chưa?            if ($result[0]->title != $this->input->post('titleAdmincp')) {                $checkData = $this->checkData($this->input->post('titleAdmincp'));                if ($checkData) {                    print 'error-title-exists';                    exit;                }            }            if ($result[0]->alias != $this->input->post('aliasAdmincp')) {                $checkSlug = $this->checkSlug($this->input->post('aliasAdmincp'));                if ($checkSlug) {                    print 'error-alias-exists';                    exit;                }            }            //Xử lý xóa hình khi update thay đổi hình            if ($fileName['thumbnail'] == '') {                $fileName['thumbnail'] = $result[0]->thumbnail;            } else {                @unlink(BASEFOLDER . DIR_UPLOAD_LIFE . $result[0]->thumbnail);            }            //End xử lý xóa hình khi update thay đổi hình            $data = array(                'title' => $this->input->post('titleAdmincp'),                'alias' => SEO($this->input->post('aliasAdmincp')),                'summary' => $this->input->post('descAdmincp'),                'catid' => $this->input->post('catidAdmincp'),                'content' => $this->input->post('contentAdmincp', FALSE),                'thumbnail' => $this->input->post('removeThumbnailAdmincp') == "on" ? "" : $fileName['thumbnail'],                'document' => $this->input->post('removeDocumentAdmincp') == "on" ? "" : $fileName['document'],                'hot' => $hot,                'home' => $home,                'active' => $active,                'publish_date' => date('Y-m-d H:i:s', $publish)            );            modules::run('admincp/saveLog', $this->module, $this->input->post('hiddenIdAdmincp'), '', 'Update', $result, $data);            $this->db->where('id', $this->input->post('hiddenIdAdmincp'));            if ($this->db->update(PREFIX . $this->table, $data)) {                return true;            }        }        return false;    }    function checkData($title)    {        $this->db->select('id');        $this->db->where('title', $title);        $this->db->limit(1);        $query = $this->db->get(PREFIX . $this->table);        if ($query->result()) {            return true;        } else {            return false;        }    }    function checkSlug($slug)    {        $this->db->select('id');        $this->db->where('alias', $slug);        $this->db->limit(1);        $query = $this->db->get(PREFIX . $this->table);        if ($query->result()) {            return true;        } else {            return false;        }    }    /*----------------------FRONTEND----------------------*/    function getNews($limit)    {        $this->db->select('*');        $this->db->where('active', 1);        if ($limit)            $this->db->limit($limit);        $this->db->order_by('created_date', 'DESC');        $query = $this->db->get(PREFIX . $this->table);        if ($query->result()) {            return $query->result();        } else {            return false;        }    }    function getCatNews($catid, $limit)    {        $this->db->select('*');        $this->db->where('active', 1);        $this->db->where('catid', $catid);        if ($limit)            $this->db->limit($limit);        $this->db->order_by('created_date', 'DESC');        $query = $this->db->get(PREFIX . $this->table);        if ($query->result()) {            return $query->result();        } else {            return false;        }    }    function get_array_news($limit, $hot = null)    {        $this->db->select('*');        $this->db->where('active', 1);        if ($hot != null)            $this->db->where('hot', $hot);        if ($limit)            $this->db->limit($limit);        $this->db->order_by('created_date', 'DESC');        $query = $this->db->get(PREFIX . $this->table);        if ($query->result()) {            return $query->result_array();        } else {            return false;        }    }    function getReindexNews()    {        $this->db->select('*');        $query = $this->db->get(PREFIX . $this->table);        if ($query->result()) {            $all = $query->result();            foreach ($all as $item) {                $data = array('alias' => SEO($item->title));                $this->db->where('id', $item->id);                $this->db->update(PREFIX . $this->table, $data);            }            return true;        } else {            return false;        }    }    function getPopularNews($limit)    {        $this->db->select('*');        $this->db->where('active', 1);        if ($limit)            $this->db->limit($limit);        $this->db->order_by('view_page', 'DESC');        $query = $this->db->get(PREFIX . $this->table);        if ($query->result()) {            return $query->result();        } else {            return false;        }    }    function getRandomNews($limit)    {        $this->db->select('*');        $this->db->where('active', 1);        if ($limit)            $this->db->limit($limit);        $this->db->order_by('id', 'RANDOM');        $query = $this->db->get(PREFIX . $this->table);        if ($query->result()) {            return $query->result();        } else {            return false;        }    }    function getRandomNewsNotTop($cat_id,$limit)    {        $this->db->select('*');        $this->db->where('catid', $cat_id);        $this->db->where('active', 1);        $this->db->limit($limit);        $this->db->order_by('id', 'RANDOM');        $query = $this->db->get(PREFIX . $this->table);        $this->db->order_by("order_num", "asc");        $this->db->order_by("publish_date", "desc");        if ($query->result()) {            return $query->result();        } else {            return false;        }    }    function getHitNews($limit)    {        $this->db->select('*');        $this->db->where('active', 1);        $this->db->where('view_page >', 20);        if ($limit)            $this->db->limit($limit);        $this->db->order_by('id', 'RANDOM');        $query = $this->db->get(PREFIX . $this->table);        if ($query->result()) {            return $query->result();        } else {            return false;        }    }    function getRandomNewsQuestion($limit)    {        $this->db->select('*');        $this->db->where('active', 1);        $this->db->where('catid', 2);        if ($limit)            $this->db->limit($limit);        $this->db->order_by('id', 'RANDOM');        $query = $this->db->get(PREFIX . $this->table);        if ($query->result()) {            return $query->result();        } else {            return false;        }    }    function getOlderNews($id, $limit)    {        $this->db->select('*');        $this->db->where('active', 1);        if ($id)            $this->db->where('id <', $id);        if ($limit)            $this->db->limit($limit);        $this->db->order_by('created_date', 'DESC');        $query = $this->db->get(PREFIX . $this->table);        if ($query->result()) {            return $query->result();        } else {            return false;        }    }    function getNewsDetail($alias_detail)    {        $this->db->select('*');        $this->db->where('alias', $alias_detail);        $this->db->where('active', 1);        $this->db->limit(1);        $query = $this->db->get(PREFIX . $this->table);        if ($query->result()) {            return $query->result();        } else {            return false;        }    }    function getSingleNewsDetail($alias_detail)    {        $this->db->select('*');        $this->db->where('alias', $alias_detail);        $this->db->where('active', 1);        $this->db->limit(1);        $query = $this->db->get(PREFIX . $this->table);        if ($query->result()) {            return $query->row();        } else {            return false;        }    }    function getCategoryByName($catid)    {        $this->db->select('*');        $this->db->where('id', $catid);        $this->db->limit(1);        $query = $this->db->get(PREFIX . 'category');        if ($query->result()) {            return $query->result();        } else {            return false;        }    }    function getCategoryById($catid)    {        $this->db->select('*');        $this->db->where('id', $catid);        $this->db->limit(1);        $query = $this->db->get(PREFIX . 'category');        if ($query->result()) {            return $query->row();        } else {            return false;        }    }    function update_view_page($alias)    {        $this->db->where('alias', $alias);        $this->db->set('view_page', 'view_page+1', FALSE);        if ($this->db->update('life')) {            return true;        } else {            return false;        }    }    function check_view_ip()    {        $this->db->like('created', date('Y-m-d', time()));        $this->db->where('ip', getIP());        $query = $this->db->get('countip');        if ($query->result()) {            return $query->result();        } else {            return false;        }    }    function update_view_ip($ishome = 0) //$ishome = 1: View Home    {        $data = array(            'ip' => getIP(),            'ishome' => $ishome,            'created' => date('Y-m-d H:i:s', time()),        );        $this->db->insert('countip', $data);    }    public function listall($offset, $start)    {        $this->db->limit($offset, $start);        $this->db->where('active', 1);        $this->db->order_by("id", "desc");        $query = $this->db->get(PREFIX . $this->table);        if ($query->result()) {            return $query->result();        } else {            return false;        }    }    public  function  getnumrowlist_article_all($cat_id, $offset, $start)    {        $this->db->limit($offset, $start);        $this->db->where('catid', $cat_id);        $this->db->where('active', 1);        $this->db->order_by("order_num", "asc");        $this->db->order_by("publish_date", "desc");        $query = $this->db->get(PREFIX . $this->table);       // return $this->db->count_all_results();        var_dump($this->db->count_all_results());exit();    }    public function getlife($cat_id, $offset, $start)    {        $query = $this->db->query("SELECT * FROM life where catid='".$cat_id."' and active=1 order by order_num asc,publish_date desc limit ".$start.",".$offset);        if ($query->result()) {            return $query->result();        } else {            return false;        }    }    public function getAlllife($cat_id)    {        $query = $this->db->query("SELECT * FROM life where catid='".$cat_id."' and active=1 order by order_num asc,publish_date desc ");        if ($query->result()) {            return $query->result();        } else {            return false;        }    }    public function list_article_all($cat_id, $offset, $start)    {       // var_dump($this->db->limit($offset, $start));        $this->db->limit($offset, $start);        $this->db->where('catid', $cat_id);        $this->db->where('active', 1);        $this->db->order_by("order_num", "asc");        $this->db->order_by("publish_date", "desc");        $query = $this->db->get(PREFIX . $this->table);        if ($query->result()) {            return $query->result();        } else {            return false;        }    }    public function list_article_all_catagory($cat_id, $offset, $start)    {        $this->db->where("catid in (select id from category where parent_id='$cat_id' or id='$cat_id') and active=1");        $this->db->order_by("order_num", "asc");        $this->db->order_by("publish_date", "desc");        $this->db->limit($offset,$start);        $query = $this->db->get(PREFIX . $this->table);        if ($query->result()) {            return $query->result();        } else {            return false;        }    }    public function list_article_all_catagory_count_article_all($cat_id)    {        $this->db->where("catid in (select id from category where parent_id='$cat_id' or id='$cat_id') and active=1");        $query = $this->db->count_all_results(PREFIX . $this->table);        if ($query > 0) {            return $query;        } else {            return false;        }    }    public function list_article_all_g($cat_id, $offset, $start)    {        $this->db->select('*');        $this->db->where('catid', $cat_id);        $this->db->where('active', 1);        $this->db->order_by("order_num", "asc");        $this->db->order_by("publish_date", "desc");        $this->db->limit($start);        $query = $this->db->get(PREFIX . $this->table);        if ($query->result()) {            return $query->result();        } else {            return false;        }    }    public function list_article_all_g_limit($cat_id, $limit, $start)    {        $this->db->select('*');        $this->db->where('catid', $cat_id);        $this->db->where('active', 1);        $this->db->order_by("order_num", "asc");        $this->db->order_by("publish_date", "desc");        $this->db->limit($start,$limit);        $query = $this->db->get(PREFIX . $this->table);        //var_dump($query);exit();        if ($query->result()) {            return $query->result();        } else {            return false;        }    }    public function list_menu_root($id)    {        $this->db->select('*');        $this->db->where('parent_id', $id);        $this->db->order_by("order", "asc");        $query = $this->db->get(PREFIX . 'category');        if ($query->result()) {            return $query->result();        } else {            return false;        }    }    public function list_article_with_category($catid,$limit=4)    {        $this->db->limit($limit);        $this->db->select('*');        $this->db->where('catid', $catid);        $this->db->order_by("id", "asc");        $query = $this->db->get(PREFIX . 'life');        if ($query->result()) {            return $query->result();        } else {            return false;        }    }    public function list_article_all_is_home($cat_id, $offset, $start)    {        $this->db->limit($offset, $start);        $this->db->where('catid', $cat_id);        $this->db->where('active', 1);        $this->db->where('home', 1);        $this->db->order_by("id", "desc");        $query = $this->db->get(PREFIX . $this->table);        if ($query->result()) {            return $query->result();        } else {            return false;        }    }    public function first_article($cat_id)    {        $this->db->where('catid', $cat_id);        $this->db->where('active', 1);        $this->db->order_by("id", "desc");        $query = $this->db->get(PREFIX . $this->table);        if ($query->result()) {            return $query->row();        } else {            return false;        }    }    public function first_article_is_home($cat_id)    {        $this->db->where('catid', $cat_id);        $this->db->where('active', 1);        $this->db->where('home', 1);        $this->db->order_by("id", "desc");        $query = $this->db->get(PREFIX . $this->table);        if ($query->result()) {            return $query->row();        } else {            return false;        }    }    public function count_all()    {        $this->db->where('active', 1);        return $this->db->count_all(PREFIX . $this->table);    }    function checkNoneCatSlug($slug)    {       // $slug = ($this->site_lang ? $this->site_lang : "vn") . "_" . $slug;        $this->db->select('id');        $this->db->where('alias', $slug);        $this->db->limit(1);        $query = $this->db->get(PREFIX . 'category');        if ($query->result()) {            $row = $query->row();            return $row->id;        } else {            return 0;        }    }    function checkCatSlug($slug)    {        $slug = ($this->site_lang ? $this->site_lang : "vn") . "_" . $slug;        $this->db->select('id');        $this->db->where('alias', $slug);        $this->db->limit(1);        $query = $this->db->get(PREFIX . 'category');        if ($query->result()) {            $row = $query->row();            return $row->id;        } else {            return 0;        }    }    function getNameCategory($slug)    {        $this->db->select('name');        $this->db->where('id', $slug);        //$this->db->limit(1);        $query = $this->db->get(PREFIX . 'category');        if ($query->result()) {            $row = $query->row();            return $row->name;        } else {            return false;        }    }    public function count_article_all($cat_id)    {        $this->db->where('catid', $cat_id);        $this->db->where('active', 1);        $this->db->from(PREFIX . $this->table);        return $this->db->count_all_results();    }    public function get_cat_all()    {        $this->db->select('*');        $this->db->where('parent_id', null);        $this->db->order_by("id", "asc");        $query = $this->db->get(PREFIX . 'category');        if ($query->result()) {            return $query->result_array();        } else {            return false;        }    }    public function saveEnroll($name, $email, $phone,$msg)    {        $data = array(            'name' => $name,            'phone' => $email,            'email' => $phone,            'msg'=>$msg        );        if ($this->db->insert(PREFIX . 'enroll', $data)) {            return true;        }        return false;    }    public  function  getUserLogincp($data)    {//var_dump(md5('123123545344438'));exit();        $this->db->select('id,username,group_id,custom_permission');        $this->db->where('username', $data);        $this->db->where('status', 1);        $query = $this->db->get('admin_users');//var_dump($this->db);exit();        if ($query->result()) {            return $query->result();        } else {            return false;        }    }    function checkLogincp($user){        $this->db->select('*');        $this->db->where('username', $user);        $this->db->where('status', 1);        $query = $this->db->get('admin_users');        foreach ($query->result() as $row){            $pass = $row->password;        }        if(!empty($pass)){            return $pass;        }else{            return false;        }    }    public  function  Checklogin($data)    {        $this->db->select('*');        $user_pass=$this->input->post('Pass');        $user_id=$this->input->post('user_id');        $this->db->where('user_pass', md5($user_pass+$user_id));        $this->db->where('user_id', $user_id);        //$query=>$this->db->query("SELECT * FROM `users` where user_pass='$user_pass' and user_id='$user_id' ");        $query = $this->db->count_all_results(PREFIX .'users');        if ($query = 1) {            return true;        } else {            $data['b_err']=array('err' =>"User chưa tồn tại");            return false;        }    }    public  function  getUserLogin($data)    {//var_dump(md5('123123545344438'));exit();        $this->db->select('*');        $user_pass=$this->input->post('Pass');        $user_id=$this->input->post('user_id');     //   $user_pass=md5($user_pass+$user_id);        $this->db->where('user_pass', md5($user_pass.$user_id));        $this->db->where('user_id', $user_id);      //  $query=$this->db->query("SELECT * FROM users where user_pass='".$user_pass."' and user_id='".$user_id."' ");        $query = $this->db->get(PREFIX .'users');        if ($query->result()) {            return $query->result();        } else {            return false;        }    }    public function get_user($groupid)    {        $groupid=$groupid+0;        $query = $this->db->query("SELECT user_id,full_name FROM users WHERE user_group_id=$groupid");        if ($query->result()) {            return $query->result();        } else {            return false;        }    }    public function getTableUserSmaller($groupid)    {        $groupid=$groupid+0;        $query = $this->db->query("SELECT * FROM users WHERE user_group_id>$groupid");        if ($query->result()) {            return $query->result();        } else {            return false;        }    }    public function getTablelife($lang,&$startRow=1,$pageSize=20)    {       // var_dump($lang);exit();        $query = $this->db->query("SELECT life.* FROM life left join category on life.catid=category.id where LEFT(category.alias,2)='".$lang."' order by id,modified_date limit ".$startRow.",".$pageSize);        if ($query->result()) {            return $query->result();        } else {            return false;        }    }    public function getAlllifeparentid($id)    {        $query = $this->db->query("SELECT life.* FROM life left join category on life.catid=category.id where category.parent_id='".$id."'");//var_dump( $this->db);exit();        // $query = $this->db->count_all_results("SELECT life.* FROM life left join category on life.catid=category.id where LEFT(category.alias,2)='".$lang."' order by id,modified_date ");        if ($query->result()) {            return $query->result();        } else {            return false;        }    }    public function getlifeparentid($id,$pageSize=20 ,&$startRow)    {         $query = $this->db->query("SELECT life.* FROM life left join category on life.catid=category.id where category.parent_id='".$id."' order by id,modified_date limit ".$startRow.",".$pageSize);//var_dump( $this->db);exit();        // $query = $this->db->count_all_results("SELECT life.* FROM life left join category on life.catid=category.id where LEFT(category.alias,2)='".$lang."' order by id,modified_date ");        if ($query->result()) {            return $query->result();        } else {            return false;        }    }    public function AllgetTablelife($lang)    {        // var_dump($lang);exit();        $query = $this->db->query("SELECT life.* FROM life left join category on life.catid=category.id where LEFT(category.alias,2)='".$lang."' order by id,modified_date ");       // $query = $this->db->count_all_results("SELECT life.* FROM life left join category on life.catid=category.id where LEFT(category.alias,2)='".$lang."' order by id,modified_date ");        if ($query->result()) {            return $query->result();        } else {            return false;        }    }    public function getOnelife($lang)    {        // var_dump($lang);exit();        $query = $this->db->query("SELECT life.* FROM life left join category on life.catid=category.id where LEFT(category.alias,2)='".$lang."' order by id,modified_date ");        // $query = $this->db->count_all_results("SELECT life.* FROM life left join category on life.catid=category.id where LEFT(category.alias,2)='".$lang."' order by id,modified_date ");        if ($query->result()) {            return $query->result();        } else {            return false;        }    }    //0 as userid    public function get_user_group()    {        $this->db->select('*,name as full_name');        $this->db->where('status', 1);        $query = $this->db->get(PREFIX . 'users_group');       // $query = $this->db->query("SELECT name as fullname FROM `users_group` WHERE status=1");        if ($query->result()) {            return $query->result();//result_array();        } else {            return false;        }    }  /*  public function hash_passwd( $password, $random_salt )    {        return crypt( $password . config_item('encryption_key'), '$2a$09$' . $random_salt . '$' );    }    public function random_salt()    {        return md5( mt_rand() );    }*/    /*--------------------END FRONTEND--------------------*/}